# shellcheck disable=1090,2034

# https://www.shellcheck.net/wiki/SC1090
# shellcheck source=/dev/null

# Checking for the prompt var is a hack to avoid `scp` from
# trying to allocate a tty for noninteractive bash sessions.
# It's happening because there are commands in the scripts
# below that were cause bash to try and allocate a tty.
# It's more feasible to wrap this in a conditional than to
# move them to `.bash_profile`.
# https://unix.stackexchange.com/a/557670
#
# Note that not preventing this scripts from running in a
# non-interactive bash session was having unintended side
# effects such as `scp` not being able to copy to a remote
# server.
if [ "$PS1" ]
then
    [ -f "$HOME/.bash_aliases" ] && source "$HOME/.bash_aliases"
    [ -f "$HOME/.bash_colors" ] && source "$HOME/.bash_colors"
    [ -f "$HOME/.bash_env" ] && source "$HOME/.bash_env"
    [ -f "$HOME/.bash_functions" ] && source "$HOME/.bash_functions"
    [ -f "$HOME/.bash_options" ] && source "$HOME/.bash_options"
    [ -f "$HOME/.bash_vendor" ] && source "$HOME/.bash_vendor"
    # https://www.howtoforge.com/how-to-add-bash-completion-in-debian
    [ -f /etc/bash_completion ] && source /etc/bash_completion
    [ -f "$HOME/.Xresources" ] && xrdb -merge "$HOME/.Xresources"

    # Allows to clear screen when vi is set as my command-line editor (not necessary if vi is not set).
    bind -m vi-insert "\C-l":clear-screen

    # Enable history expansion with [[space]].
    # E.g., typing !![[space]] will replace the !! with your last command!
    # No more appending `:p` to do a dry-run of the expansion!!
    bind Space:magic-space

    # If a fortune program is installed.
    if command -v fortune > /dev/null
    then
        if command -v cowsay > /dev/null
        then
            fortune -e | cowsay -W 60 -f bud-frogs
        else
            fortune -e
        fi
    fi
fi

# Let's set a more secure umask.
#umask 0077

# Map Caps Lock to Ctrl.
# Note that I'm now doing this system-wide in `/etc/default/keyboard`:
#   XKBOPTIONS="ctrl:nocaps"
#if [ -f $HOME/.Xmodmap ]; then
#    xmodmap $HOME/.Xmodmap
#fi

# Make less more friendly for non-text input files, see lesspipe(1).
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Set variable identifying the chroot you work in (used in the prompt below).
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# Uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt.
force_color_prompt=yes

if [ -n "$force_color_prompt" ]
then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null
    then
        # We have color support; assume it's compliant with Ecma-48
        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
        # a case would tend to support setf rather than setaf.)
        color_prompt=yes
    else
        color_prompt=
    fi
fi

# Enable color support of ls and also add handy aliases.
if [ -x /usr/bin/dircolors ]
then
    eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    #alias grep='grep --color=auto'
    #alias fgrep='fgrep --color=auto'
    #alias egrep='egrep --color=auto'
fi

# Allow access control for localhost with Xorg.
# Especially needed for browsers (like tor) running in containers.
#if [ -n "$DISPLAY" ]
#then
#    xhost +local:sulla
#fi

