" vim: set ft=vim:

filetype plugin indent on

" https://github.com/junegunn/vim-plug/wiki/faq
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')

Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }

" Make sure to escape the spaces in the name properly.
set guifont=Source\ Code\ Pro\ for\ Powerline

"<------------------------------------------------------------->
" Plugins
"<------------------------------------------------------------->
Plug 'koalaman/shellcheck'

"Plug 'mattn/gist-vim.git'
" https://github.com/mattn/gist-vim.git
" Instructions
"   1. git config --global github.user xxx@xxx.com (writes to ~/.gitconfig).
"   2. Install https://github.com/mattn/webapi-vim in ~/.vim/bundle (assuming Pathogen) to resolve errors.
"   3. Enter github password when prompted when creating gist (saves oAuth token in ~/.gist-vim).

Plug 'scrooloose/syntastic'
" https://github.com/vim-syntastic/syntastic/tree/master/syntax_checkers
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 1
" https://github.com/vim-syntastic/syntastic/blob/master/syntax_checkers/dockerfile/hadolint.vim
let g:syntastic_dockerfile_checkers = ['hadolint']
let g:syntastic_javascript_checkers = ['eslint', 'jshint']
let g:syntastic_python_python_exec = 'python3'
let g:syntastic_python_checkers = ['pycodestyle']
let g:syntastic_sh_checkers = ['shellcheck']

" This also enables the vim-go commands :GoDecls and :GoDeclsDir.
" https://github.com/fatih/vim-go/wiki/Tutorial#move-between-functions
Plug 'kien/ctrlp.vim'
set runtimepath^=~/.vim/bundle/ctrlp.vim
" Opens ctrlp in buffer mode.
let g:ctrlp_cmd = 'CtrlPBuffer'

" Use The Silver Searcher https://github.com/ggreer/the_silver_searcher
if executable('ag')
  " Use Ag over Grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

" https://github.com/fatih/vim-go-tutorial#struct-split-and-join (for golang)
Plug 'AndrewRadev/splitjoin.vim'
Plug 'bitc/vim-bad-whitespace'

Plug 'sirver/ultisnips'
" https://stackoverflow.com/a/17388948
let g:UltiSnipsExpandTrigger="<c-j>"

Plug 'flazz/vim-colorschemes'
Plug 'sainnhe/sonokai'

Plug 'rking/ag.vim'

"Plug 'scrooloose/nerdtree'
"
" Install instructions:
" https://github.com/ycm-core/YouCompleteMe#linux-64-bit
Plug 'ycm-core/YouCompleteMe'

Plug 'fatih/molokai'
let g:rehash256 = 1
let g:molokai_original = 1

" https://github.com/fatih/vim-go
" https://github.com/fatih/vim-go/wiki/Tutorial
" To update, :GoUpdateBinaries
Plug 'fatih/vim-go', { 'do': ':GoInstallBinaries' }
"let g:go_auto_sameids = 1 " Highlight same identifiers in file.
let g:go_auto_type_info = 1 " Automatically show function signature of symbol under cursor.
"set updatetime=800 // Default time to show function signature in status line (800ms).
let g:go_decls_includes = 'func,type'
let g:go_def_mode = 'gopls'
let g:go_fmt_command = 'goimports'
let g:go_fmt_fail_silently = 1 " Don't show errors in quickfix window when file is saved (not working).
let g:go_highlight_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_operators = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_build_constraints = 1
let g:go_highlight_generate_tags = 1
let g:go_info_mode = 'gopls'
let g:go_list_type = 'quickfix' " ONLY have quickfix lists (no location lists).
let g:go_metalinter_autosave = 1 " Calls `GoMetaLinter` when the file is saved.
let g:go_metalinter_autosave_enabled = ['vet', 'golint'] " Don't call the whole list when saving to make it faster.
let g:go_metalinter_enabled = ['vet', 'golint', 'errcheck']
let g:go_metalinter_deadline = '5s'
"let g:go_play_browser_command = 'chrome' " When xdg-open misdetecting the browser.
let g:go_play_open_browser = 1
let g:go_test_timeout = '10s'
let g:go_textobj_include_function_doc = 1
let g:go_version_warning = 0

"Plug 'aquasecurity/vim-trivy'

"Plug 'hashivim/vim-terraform.git'

" The default netrw plugin.
let g:netrw_banner=0
let g:netrw_browse_split=4 " open in prior window
let g:netrw_altv=1         " open splits to the right
let g:netrw_liststyle=3    " tree view
let g:netrw_list_hide=netrw_gitignore#Hide()
let g:netrw_list_hide=',\(^\|\s\s\)\zs\.\S\+' " this is also hiding hidden files
let g:netrw_winsize = 25

call plug#end()

